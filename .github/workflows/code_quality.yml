name: Code Quality Checks

on:
  push:
    branches:
      - master
      - develop
  pull_request:
  release:
    types:
      - created

jobs:

  eslint:
    #  JS CodeStyle
    name: ESLint
    runs-on: ubuntu-latest
    # config defined in .eslintrc.yml
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '10.x'
      - run: npm install
      - run: npm run test

  stylelint:
    #  SCSS CodeStyle
    name: StyleLint
    runs-on: ubuntu-latest
    # config defined in .stylelintrc.json
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '10.x'
      - run: npm install
      - run: npm run test-style
        continue-on-error: true  # TODO: remove after fixing all style errors

  php-loc:
    #  Measuring the size and analyzing the structure of the project (php)
    name: PHP Loc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          wget https://phar.phpunit.de/phploc.phar
          php phploc.phar src tests

  phpcpd:
    # Checking for PHP code that was just copied
    name: PHP Copy Paste Detector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: PHP Copy Paste Detector
        uses: StephaneBour/actions-php-cpd@1.1
        with:
          args: src tests --exclude Admin --exclude Entity --exclude phpUnit

  php-cs-fixer:
    # Checking the Coding standard
    name: PHP CS Fixer
    runs-on: ubuntu-latest
    # config defined in .php_cs(.dist)
    steps:
      - uses: actions/checkout@v2
      - uses: docker://oskarstark/php-cs-fixer-ga:2.16.4
        with:
          args: --config=.php_cs.dist --diff --dry-run --allow-risky=yes --verbose --format=txt

  phpstan:
    # Additional static code quality checks
    name: PHPStan
    runs-on: ubuntu-latest
    # config defined in phpstan.neon(.dist)
    steps:
      - uses: actions/checkout@v2
      - name: PHPStan
        uses: docker://oskarstark/phpstan-ga:0.12.28
        env:
          REQUIRE_DEV: true
        with:
          args: analyse

  twig_lint:
    # Lints a template and outputs encountered errors.
    name: Twig Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Lint Twig
        run: composer run-script console lint:twig templates/

  yaml_lint:
    # Lints a file and outputs encountered errors. Specify all dirs but vendor
    name: Yaml Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Lint Yaml
        run: composer run-script console lint:yaml translations/ config/ .github/ docker/ behat.yml.dist .eslintrc.yml

  container_lint:
    # Ensures that arguments injected into services match type declarations
    name: Symfony Container Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Lint Container
        run: composer run-script console lint:container
